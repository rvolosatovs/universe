initSidebarItems({"mod":[["types","Enarxcall-specific types."]],"struct":[["BalloonMemory","Request an additional memory region."],["Cpuid","Cpuid Enarx call, which writes the result of the `cpuid` instruction for a given `leaf` (`EAX`) and `sub_leaf` (`ECX`) in `result` field."],["GetSgxQuote",""],["GetSgxQuoteSize","Get the size of the SGX Quote"],["GetSgxTargetInfo",""],["GetSnpVcek",""],["MemInfo","Get number of memory slots available for ballooning from the host."],["RemoveSgxPages","Within an address range inside the enclave, ask host to remove pages from the enclave. Pages must be trimmed before this operation is applied."],["ResetSgxPermissions","Within an address range inside the enclave, ask host to reset permissions to ‘read’. Address and length must be page-aligned.  Shim must validate and acknowledge the changes with ENCLU[EACCEPT], in order for them to take effect."],["StagedGetSgxQuote",""],["TrimSgxPages","Within an address range inside the enclave, ask host to set page type to ‘trimmed’. Address and length must be page-aligned. Shim must validate and acknowledge the changes with ENCLU[EACCEPT], in order for them to take effect."]],"trait":[["Alloc","A generic Enarx call, which can be allocated within the block."],["PassthroughAlloc","Trait implemented by allocatable Enarx calls, which are passed through directly to the host and do not require custom handling logic."]]});