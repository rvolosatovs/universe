initSidebarItems({"constant":[["BE","Big Endian byte order context"],["LE","Little Endian byte order context"],["NATIVE","The machineâ€™s native byte order"],["NETWORK","Network byte order context"]],"enum":[["Endian","The endianness (byte order) of a stream of bytes"],["Error","A custom Scroll error"]],"mod":[["ctx","Generic context-aware conversion traits, for automatic downstream extension of `Pread`, et. al"]],"struct":[["Sleb128","An signed leb128 integer"],["Uleb128","An unsigned leb128 integer"]],"trait":[["Cread","Core-read - core, no_std friendly trait for reading basic traits from byte buffers. Cannot fail unless the buffer is too small, in which case an assert fires and the program panics."],["Cwrite","Core-write - core, no_std friendly trait for writing basic types into byte buffers. Cannot fail unless the buffer is too small, in which case an assert fires and the program panics. Similar to Cread, if your type implements IntoCtx then you can `cwrite(your_type, offset)`."],["Pread","A very generic, contextual pread interface in Rust. "],["Pwrite","A very generic, contextual pwrite interface in Rust."]],"type":[["Result",""]]});