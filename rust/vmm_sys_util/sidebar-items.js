initSidebarItems({"macro":[["generate_fam_struct_impl","Generate `FamStruct` implementation for structs with flexible array member."],["ioctl_io_nr","Declare an ioctl that transfers no data."],["ioctl_ioc_nr","Declare a function that returns an ioctl number."],["ioctl_ior_nr","Declare an ioctl that reads data."],["ioctl_iow_nr","Declare an ioctl that writes data."],["ioctl_iowr_nr","Declare an ioctl that reads and writes data."]],"mod":[["aio","Safe wrapper over `Linux AIO`."],["epoll","Safe wrappers over the `epoll` API."],["errno","Structures, helpers, and type definitions for working with `errno`."],["eventfd","Structure and wrapper functions for working with `eventfd`."],["fallocate","Enum and function for dealing with an allocated disk space by `fallocate`."],["fam","Trait and wrapper for working with C defined FAM structures."],["file_traits","Traits for handling file synchronization and length."],["ioctl","Macros and functions for working with `ioctl`."],["metric","The purpose of this module is to provide abstractions for working with metrics in the context of rust-vmm components where there is a strong need to have metrics as an optional feature."],["poll","Traits and structures for working with `epoll`"],["rand","Miscellaneous functions related to getting (pseudo) random numbers and strings."],["seek_hole","Traits and implementations over lseek64."],["signal","Enums, traits and functions for working with `signal`."],["sock_ctrl_msg","Wrapper for sending and receiving messages with file descriptors on sockets that accept control messages (e.g. Unix domain sockets)."],["syscall","Wrapper for interpreting syscall exit codes."],["tempdir","Structure for handling temporary directories."],["tempfile","Struct for handling temporary files as well as any cleanup required."],["terminal","Trait for working with `termios`."],["timerfd","Structure and functions for working with `timerfd`."],["write_zeroes","Traits for replacing a range with a hole and writing zeroes in a file."]]});